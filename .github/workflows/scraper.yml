name: Ejecutar Scraper y Actualizar JSON

on:
  schedule:
    - cron: '*/10 * * * *'  # Ejecuta cada 10 minutos
  workflow_dispatch:  # Permite ejecutarlo manualmente desde GitHub

permissions:
  contents: write  # Permite hacer commit y push en el repositorio

jobs:
  run_scraper:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Clonar el repositorio
        uses: actions/checkout@v4

      - name: üêç Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: üõ† Instalar dependencias necesarias
        run: |
          set -e  # Detener ejecuci√≥n si ocurre un error
          
          sudo apt update
          sudo apt install -y unzip wget curl jq

          # ‚úÖ OBTENER VERSI√ìN DE CHROME YA INSTALADA EN GITHUB ACTIONS
          if ! command -v google-chrome &> /dev/null; then
              echo "‚ùå Google Chrome no est√° instalado. Abortando."
              exit 1
          fi

          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          echo "‚úÖ Versi√≥n de Chrome detectada: $CHROME_VERSION"

          # ‚úÖ OBTENER CHROMEDRIVER COMPATIBLE
          CHROMEDRIVER_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")

          if [ -z "$CHROMEDRIVER_VERSION" ]; then
              echo "‚ùå No se pudo obtener la versi√≥n de ChromeDriver. Abortando."
              exit 1
          fi

          echo "‚úÖ Versi√≥n de ChromeDriver detectada: $CHROMEDRIVER_VERSION"
          wget -q -O chromedriver.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
          unzip chromedriver.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

          # üîç Verificar instalaci√≥n correcta
          google-chrome --version
          chromedriver --version

          # ‚úÖ Instalar dependencias de Python
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üöÄ Ejecutar el scraper
        run: python scraper.py

      - name: üíæ Confirmar cambios en el JSON
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add wait-times.json
          git commit -m "üîÑ Actualizaci√≥n autom√°tica de tiempos de espera" --allow-empty
          git push
