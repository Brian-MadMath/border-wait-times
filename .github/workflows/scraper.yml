name: Ejecutar Scraper y Actualizar JSON

on:
  schedule:
    - cron: '*/10 * * * *'  # Ejecuta cada 10 minutos
  workflow_dispatch:  # Permite ejecutarlo manualmente desde GitHub

permissions:
  contents: write  # Permite hacer commit y push en el repositorio

jobs:
  run_scraper:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Clonar el repositorio
        uses: actions/checkout@v4

      - name: üêç Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: üõ† Instalar Google Chrome y ChromeDriver
        run: |
          sudo apt update
          sudo apt install -y unzip wget curl jq

          # Descargar e instalar Google Chrome estable
          wget -q -O google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome.deb || sudo apt-get install -f -y

          # Si Chrome no se instal√≥, intentar de nuevo
          if ! command -v google-chrome &> /dev/null; then
              echo "‚ùå Error: Google Chrome no se instal√≥ correctamente"
              exit 1
          fi

          # Obtener versi√≥n de Chrome instalada
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          echo "‚úÖ Google Chrome instalado: Versi√≥n $CHROME_VERSION"

          # Descargar ChromeDriver que coincida con la versi√≥n de Chrome
          LATEST_DRIVER=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
          wget -q -O chromedriver.zip https://chromedriver.storage.googleapis.com/$LATEST_DRIVER/chromedriver_linux64.zip

          # Extraer y mover ChromeDriver
          unzip chromedriver.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

          # Confirmar instalaci√≥n de ChromeDriver
          chromedriver --version

          # Instalar dependencias de Python
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üöÄ Ejecutar el scraper
        run: python scraper.py

      - name: üíæ Confirmar cambios en el JSON
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add wait-times.json
          git commit -m "üîÑ Actualizaci√≥n autom√°tica de tiempos de espera" --allow-empty
          git push
